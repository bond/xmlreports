/*
   webalizer_lang.french

   Webalizer V2.0x Language Support file for French.
   04-Jun-1998 Translation by Sylvain Avril (savril@oceanet.fr)
   04-Jun-1998 Modified for level 1.1 support (brad@mrunix.net)
   23-Jul-1998 Modified for level 1.2 support (brad@mrunix.net)
   20-Feb-1999 Added non-extended char l_month array (brad@mrunix.net)
   08-Mar-1999 Updated HTTP 1.1 response codes by Yves Lafon (ylafon@w3.org)
   28-Jun-1999 Modified for level 1.3 support (brad@mrunix.net)
   27-Jan-2000 Translation complements by Christophe Aubert (ca@tgi.fr)
   11-Fev-2000 Minor complements by Laurent Monin(lmonin@metaconcept.com)
   22-Feb-2000 Modified for level 2.0 support (brad@mrunix.net)
   17-Mar-2000 French support for level 2.0 (lmonin@metaconcept.com)

   Language files are named using the following convention:

   webalizer_lang.LANGUAGE

   where 'LANGUAGE' is the name of the language the file is
   translated into (ie: webalizer_lang.russian for russian).
   Either copy the desired language file to webalizer_lang.h
   or create a symbolic link, then re-compile.

   If you translate this file into a different language, please
   send a copy to brad@mrunix.net

*/

/*
   Traduit par Sylvain AVRIL (savril@oceanet.fr,
      http://www.coucounet.com/sylvain/)
      - Oceanet (http://www.oceanet.fr/)

   Je n'ai pas traduit les messages d'erreurs qui me paraissaient etre plus
   clairs en anglais
*/

/*
   Complements de traduction par Christophe AUBERT (ca@tgi.fr)
      - TGI (http://www.tgi.fr/)

   J'ai traduit les noms de pays ainsi que differents titres ...
   Les messages d'erreurs restent en anglais
*/

/* 
   Complements mineurs de traduction par Laurent MONIN 
      - lmonin@metaconcept.com
      
   J'ai traduit Kbytes --> KOctets
   et certains pays conformement à DNS/BIND 3eme edition
   Les messages d'erreurs restent en anglais
   Adaptation pour version 2.0	
*/


/***********************************************************************/
/* DEFINE LANGUAGE NAME here                                           */
/***********************************************************************/

char *language  = "French";

/***********************************************************************/
/*                                                                     */
/* Informational messages                                              */
/*                                                                     */
/* These messages are only displayed while The Webalizer is being run, */
/* usually to the screen, and are not part of the HTML output.         */
/*                                                                     */
/***********************************************************************/

/* these are only used in timing totals */
/* Format:   XXX records (XXX ignored, XXX bad) in X.XX seconds        */
char *msg_records = "records";
char *msg_addresses="addresses";
char *msg_ignored = "ignored";
char *msg_bad     = "bad";
char *msg_in      = "in";
char *msg_seconds = "seconds";

/* progress and setup error messages */
char *msg_log_err = "Error: Can't open log file";
char *msg_log_use = "Using logfile";
char *msg_dir_err = "Error: Can't change directory to";
char *msg_dir_use = "Creating output in";
char *msg_cur_dir = "current directory";
char *msg_hostname= "Hostname for reports is";
char *msg_ign_hist= "Ignoring previous history...";
char *msg_no_hist = "History file not found...";
char *msg_get_hist= "Reading history file...";
char *msg_put_hist= "Saving history information...";
char *msg_hist_err= "Error: Unable to write history file";
char *msg_bad_hist= "Error: Ignoring invalid history record";
char *msg_bad_conf= "Error: Unable to open configuration file";
char *msg_bad_key = "Warning: Invalid keyword";
char *msg_bad_date= "Error: Skipping record (bad date)";
char *msg_ign_nscp= "Skipping Netscape header record";
char *msg_bad_rec = "Skipping bad record";
char *msg_no_vrec = "No valid records found!";
char *msg_gen_rpt = "Generating report for";
char *msg_gen_sum = "Generating summary report";
char *msg_get_data= "Reading previous run data...";
char *msg_put_data= "Saving current run data...";
char *msg_no_data = "Previous run data not found...";
char *msg_bad_data= "Error: Unable to restore run data";
char *msg_data_err= "Error: Unable to save current run data";
char *msg_dup_data= "Warning: Possible duplicate data found";

/* DNS Stuff */
char *msg_dns_nocf= "No cache file specified, aborting...";
char *msg_dns_nodb= "Error: Unable to open DNS cache file";
char *msg_dns_nolk= "Error: Unable to lock DNS cache file";
char *msg_dns_usec= "Using DNS cache file";
char *msg_dns_rslv= "DNS Lookup";
char *msg_dns_none= "None to process";

/* memory allocation errors */
char *msg_nomem_ts= "Can't allocate enough memory, Top Sites disabled!";
char *msg_nomem_tr= "Can't allocate enough memory, Top Referrers disabled!";
char *msg_nomem_tu= "Can't allocate enough memory, Top URLs disabled!";
char *msg_nomem_tc= "Can't allocate enough memory, Top Countries disabled!";
char *msg_nomem_ta= "Can't allocate enough memory, Top User Agents disabled!";
char *msg_nomem_tsr="Can't allocate enough memory, Top Search Strings disabled!";
char *msg_nomem_ti= "Can't allocate enough memory, Top Usernames disabled!";
char *msg_nomem_dh= "Error adding host node (daily), skipping";
char *msg_nomem_mh= "Error adding host node (monthly), skipping";
char *msg_nomem_u = "Error adding URL node, skipping";
char *msg_nomem_a = "Error adding User Agent node, skipping";
char *msg_nomem_r = "Error adding Referrer node, skipping";
char *msg_nomem_sc= "Error adding Search String node, skipping";
char *msg_nomem_i = "Error adding Username node, skipping";

/* log record errors */
char *msg_big_rec = "Error: Skipping oversized log record";
char *msg_big_host= "Warning: Truncating oversized hostname";
char *msg_big_date= "Warning: Truncating oversized date field";
char *msg_big_req = "Warning: Truncating oversized request field";
char *msg_big_ref = "Warning: Truncating oversized referrer field";
char *msg_big_user= "Warning: Truncating oversized username";
char *msg_big_one = "Warning: String exceeds storage size";

/* misc errors */
char *msg_no_open = "Error: Unable to open file";

/* Help display... */
char *h_usage1 = "Usage";
char *h_usage2 = "[options] [log file]";
char *h_msg[]= {
         "-h        = print this help message"             ,
         "-v -V     = print version information"           ,
         "-d        = print additional debug info"         ,
         "-F type   = Log type.  type= (clf | ftp | squid)",
         "-f        = fold sequence errors"                ,
         "-i        = ignore history file"                 ,
         "-p        = preserve state (incremental)"        ,
         "-q        = supress informational messages"      ,
         "-Q        = supress _ALL_ messages"              ,
         "-Y        = supress country graph"               ,
         "-G        = supress hourly graph"                ,
         "-H        = supress hourly stats"                ,
         "-L        = supress color coded graph legends"   ,
         "-l num    = use num background lines on graph"   ,
         "-m num    = Visit timeout value (seconds)"       ,
         "-T        = print timing information"            ,
         "-c file   = use configuration file 'file'"       ,
         "-n name   = hostname to use"                     ,
         "-o dir    = output directory to use"             ,
         "-t name   = report title 'name'"                 ,
         "-a name   = hide user agent 'name'"              ,
         "-r name   = hide referrer 'name'"                ,
         "-s name   = hide site 'name'"                    ,
         "-u name   = hide URL 'name'"                     ,
         "-x name   = use filename extension 'name'"       ,
         "-P name   = Page type extension 'name'"          ,
         "-I name   = Index alias 'name'"                  ,
         "-L name   = Group URLs by 'name'"                ,
         "-A num    = Display num top agents"              ,
         "-C num    = Display num top countries"           ,
         "-R num    = Display num top referrers"           ,
         "-S num    = Display num top sites"               ,
         "-U num    = Display num top URLs"                ,
         "-e num    = Display num top Entry Pages"         ,
         "-E num    = Display num top Exit Pages"          ,
         "-g num    = Group Domains to 'num' levels"       ,
         "-X        = Hide individual sites"               ,
         "-D name   = Use DNS Cache file 'name'"           ,
         "-N num    = Number of DNS processes (0=disable)" ,
         NULL};

#define LAST_HLP_MSG (int)(sizeof(h_msg)/sizeof(char *))

/***********************************************************************/
/*                                                                     */
/* HTML strings                                                        */
/*                                                                     */
/* These strings are used as part of the HTML output generated by The  */
/* Webalizer.                                                          */ 
/*                                                                     */
/***********************************************************************/

/* header strings */
char *msg_hhdr_sp = "P&eacute;riode du r&eacute;sum&eacute;";
char *msg_hhdr_gt = "G&eacute;n&eacute;r&eacute; le";

/* main index strings */
char *msg_main_us = "Resume des acces pour";
char *msg_main_per= "12 derniers mois";
char *msg_main_sum= "R&eacute;sum&eacute; par mois";
char *msg_main_da = "Moyenne journali&egrave;re";
char *msg_main_mt = "Totaux mensuels";

/* month HTML page strings */
char *msg_hmth_du = "Acces journalier pour";
char *msg_hmth_hu = "Acces horaire pour";

/* table header strings */
char *msg_h_by    = "par";
char *msg_h_avg   = "Moy.";
char *msg_h_max   = "Max";
char *msg_h_total = "Total";
char *msg_h_totals= "Totaux";
char *msg_h_day   = "Jour";
char *msg_h_mth   = "Mois";
char *msg_h_hour  = "Heure";
char *msg_h_hits  = "Hits";
char *msg_h_pages = "Pages";
char *msg_h_visits= "Visites";
char *msg_h_files = "Fichiers";
char *msg_h_sites = "Sites";
char *msg_h_xfer  = "Ko";
char *msg_h_hname = "Nom d'h&ocirc;te";
char *msg_h_url   = "URL";
char *msg_h_agent = "Navigateur";
char *msg_h_ref   = "R&eacute;f&eacute;rent";
char *msg_h_ctry  = "Pays";
char *msg_h_search= "Mots-cl&eacute;s";
char *msg_h_uname = "Utilisateur";

/* links along top of page */
char *msg_hlnk_ds = "Statistiques journali&egrave;res";
char *msg_hlnk_hs = "Statistiques horaires";
char *msg_hlnk_u  = "URLs";
char *msg_hlnk_s  = "Sites";
char *msg_hlnk_a  = "Navigateurs";
char *msg_hlnk_c  = "Pays";
char *msg_hlnk_r  = "R&eacute;f&eacute;rents";
char *msg_hlnk_en = "Pages d'entr&eacute;e";
char *msg_hlnk_ex = "Pages de sortie";
char *msg_hlnk_sr = "Mots-cl&eacute;s";
char *msg_hlnk_i  = "Utilisateurs";

/* monthly total table */
char *msg_mtot_ms = "Statistiques mensuelles pour";
char *msg_mtot_th = "Total des Hits";
char *msg_mtot_tf = "Total des Fichiers";
char *msg_mtot_tx = "Total des Ko";
char *msg_mtot_us = "Total des Sites uniques";
char *msg_mtot_ur = "Total des R&eacute;f&eacute;rents uniques";
char *msg_mtot_ua = "Total des Navigateurs";
char *msg_mtot_uu = "Total des URLs uniques";
char *msg_mtot_ui = "Total des utilisateurs uniques";
char *msg_mtot_mhd= "Hits par Jour";
char *msg_mtot_mhh= "Hits par Heure";
char *msg_mtot_mfd= "Fichiers par Jour";
char *msg_mtot_mpd= "Pages par Jour";
char *msg_mtot_mvd= "Visites par Jour";
char *msg_mtot_mkd= "KOctets par Jour";
char *msg_mtot_rc = "Hits par code de r&eacute;ponse";

/* daily total table */
char *msg_dtot_ds = "Statistiques journali&egrave;res pour";

/* hourly total table */
char *msg_htot_hs = "Statistiques horaires pour";

/* country pie chart */
char *msg_ctry_use= "Acces par pays pour";

/* top tables */
/* Formatted as "Top xxx of xxx Total something" */
char *msg_top_top = "Top";
char *msg_top_of  = "sur un total de";
char *msg_top_s   = "sites";
char *msg_top_u   = "URLs";
char *msg_top_r   = "r&eacute;f&eacute;rents";
char *msg_top_a   = "navigateurs";
char *msg_top_c   = "pays";
char *msg_top_en  = "pages d'entr&eacute;e";
char *msg_top_ex  = "pages de sortie";
char *msg_top_sr  = "groupes de mots-cl&eacute;s";
char *msg_top_i   = "utilisateurs";
char *msg_v_sites = "Voir tous les sites";
char *msg_v_urls  = "Voir toutes les URLs";
char *msg_v_refs  = "Voir tous les r&eacute;f&eacute;rents";
char *msg_v_agents= "Voir tous les navigateurs";
char *msg_v_search= "Voir tous les mots-cl&eacute;s";
char *msg_v_users = "Voir tous les utilisateurs";

/* short month names MUST BE 3 CHARS in size... pad if needed*/
char *s_month[12]={ "Jan", "Fev", "Mar",
                    "Avr", "Mai", "Juin",
                    "Juil", "Aou", "Sep",
                    "Oct", "Nov", "Dec"};

/* long month names - can be any length */
/*
char *l_month[12]={ "Janvier",  "F&eacute;vrier", "Mars",   "Avril",
                    "Mai",      "Juin",     "Juillet",    "Ao&ucirc;t",
                    "Septembre","Octobre",  "Novembre","D&eacute;cembre"};
*/

/* Some installations may need to use this one instead                 */
char *l_month[12]={ "Janvier",  "Fevrier",  "Mars",    "Avril",
                    "Mai",      "Juin",     "Juillet", "Aout",
                    "Septembre","Octobre",  "Novembre","Decembre"};

/* response code descriptions... order IS important!      */
struct response_code response[] =
       { { "Undefined response code",                    0 },
         { "Code 100 - Continue",                        0 },
         { "Code 101 - Switching Protocols",             0 },
         { "Code 200 - OK",                              0 },
         { "Code 201 - Created",                         0 },
         { "Code 202 - Accepted",                        0 },
         { "Code 203 - Non-Authoritative Information",   0 },
         { "Code 204 - No Content",                      0 },
         { "Code 205 - Reset Content",                   0 },
         { "Code 206 - Partial Content",                 0 },
         { "Code 300 - Multiple Choices",                0 },
         { "Code 301 - Moved Permanently",               0 },
         { "Code 302 - Found",                           0 },
         { "Code 303 - See Other",                       0 },
         { "Code 304 - Not Modified",                    0 },
         { "Code 305 - Use Proxy",                       0 },
         { "Code 307 - Moved Temporarily",               0 },
         { "Code 400 - Bad Request",                     0 },
         { "Code 401 - Unauthorized",                    0 },
         { "Code 402 - Payment Required",                0 },
         { "Code 403 - Forbidden",                       0 },
         { "Code 404 - Not Found",                       0 },
         { "Code 405 - Method Not Allowed",              0 },
         { "Code 406 - Not Acceptable",                  0 },
         { "Code 407 - Proxy Authentication Required",   0 },
         { "Code 408 - Request Timeout",                 0 },
         { "Code 409 - Conflict",                        0 },
         { "Code 410 - Gone",                            0 },
         { "Code 411 - Length Required",                 0 },
         { "Code 412 - Precondition Failed",             0 },
         { "Code 413 - Request Entity Too Large",        0 },
         { "Code 414 - Request-URI Too Long",            0 },
         { "Code 415 - Unsupported Media Type",          0 },
         { "Code 416 - Requested Range Not Satisfiable", 0 },
         { "Code 417 - Expectation Failed",              0 },
         { "Code 500 - Internal Server Error",           0 },
         { "Code 501 - Not Implemented",                 0 },
         { "Code 502 - Bad Gateway",                     0 },
         { "Code 503 - Service Unavailable",             0 },
         { "Code 504 - Gateway Timeout",                 0 },
         { "Code 505 - HTTP Version Not Supported",      0 } };

char *msg_title   = "Statistiques d'acc&egrave;s &agrave;";
char *msg_h_other = "Autre";

/* Country codes (previously in ctry.h header file) */

struct	country_code ctry[] = {
{ 0,                      "Non-resolu/Inconnu",               0,0,0 },
{ IDX_3C('c','o','m'),    "US Commercial (.com)",             0,0,0 },
{ IDX_3C('e','d','u'),    "US Enseignement (.edu)",           0,0,0 },
{ IDX_3C('g','o','v'),    "US Gouvernement (.gov)",           0,0,0 },
{ IDX_3C('i','n','t'),    "International (int)",              0,0,0 },
{ IDX_3C('m','i','l'),    "US Militaire (.mil)",              0,0,0 },
{ IDX_3C('n','e','t'),    "Network (.net)",                   0,0,0 },
{ IDX_3C('o','r','g'),    "Organisations Non-commerciales (.org)",   0,0,0 },
{ IDX_4C('a','r','p','a'),"Ancien style Arpanet (arpa)",      0,0,0 },
{ IDX_4C('n','a','t','o'),"OTAN (.nato)",                     0,0,0 },
{ IDX_2C('a','c'),        "Ile Ascension",                    0,0,0 },
{ IDX_2C('a','d'),        "Andorre",                          0,0,0 },
{ IDX_2C('a','e'),        "Emirats Arabes Unis",              0,0,0 },
{ IDX_2C('a','f'),        "Afghanistan",                      0,0,0 },
{ IDX_2C('a','g'),        "Antigua et Barbuda",               0,0,0 },
{ IDX_2C('a','i'),        "Anguilla",                         0,0,0 },
{ IDX_2C('a','l'),        "Albanie",                          0,0,0 },
{ IDX_2C('a','m'),        "Armenie",                          0,0,0 },
{ IDX_2C('a','n'),        "Antilles Neerlandaises",           0,0,0 },
{ IDX_2C('a','o'),        "Angola",                           0,0,0 },
{ IDX_2C('a','q'),        "Antarctique",                      0,0,0 },
{ IDX_2C('a','r'),        "Argentine",                        0,0,0 },
{ IDX_2C('a','s'),        "Samoa Americaines",                0,0,0 },
{ IDX_2C('a','t'),        "Autriche",                         0,0,0 },
{ IDX_2C('a','u'),        "Australie",                        0,0,0 },
{ IDX_2C('a','w'),        "Aruba",                            0,0,0 },
{ IDX_2C('a','z'),        "Azerbaidjan",                      0,0,0 },
{ IDX_2C('b','a'),        "Bosnie Herzegovine",               0,0,0 },
{ IDX_2C('b','b'),        "Barbades",                         0,0,0 },
{ IDX_2C('b','d'),        "Bangladesh",                       0,0,0 },
{ IDX_2C('b','e'),        "Belgique",                         0,0,0 },
{ IDX_2C('b','f'),        "Burkina Faso",                     0,0,0 },
{ IDX_2C('b','g'),        "Bulgarie",                         0,0,0 },
{ IDX_2C('b','h'),        "Bahrein",                          0,0,0 },
{ IDX_2C('b','i'),        "Burundi",                          0,0,0 },
{ IDX_2C('b','j'),        "Benin",                            0,0,0 },
{ IDX_2C('b','m'),        "Bermudes",                         0,0,0 },
{ IDX_2C('b','n'),        "Brunei Darussalam",                0,0,0 },
{ IDX_2C('b','o'),        "Bolivie",                          0,0,0 },
{ IDX_2C('b','r'),        "Bresil",                           0,0,0 },
{ IDX_2C('b','s'),        "Bahamas",                          0,0,0 },
{ IDX_2C('b','t'),        "Bhoutan",                          0,0,0 },
{ IDX_2C('b','v'),        "Ile Bouvet",                       0,0,0 },
{ IDX_2C('b','w'),        "Botswana",                         0,0,0 },
{ IDX_2C('b','y'),        "Bielorussie",                      0,0,0 },
{ IDX_2C('b','z'),        "Belize",                           0,0,0 },
{ IDX_2C('c','a'),        "Canada",                           0,0,0 },
{ IDX_2C('c','c'),        "Iles Cocos (Keeling)",             0,0,0 },
{ IDX_2C('c','d'),        "Rep. Democr. Congo (Kinshasa)",    0,0,0 },
{ IDX_2C('c','f'),        "Republique Centrafricaine",        0,0,0 },
{ IDX_2C('c','g'),        "Congo",                            0,0,0 },
{ IDX_2C('c','h'),        "Suisse",                           0,0,0 },
{ IDX_2C('c','i'),        "Cote D'Ivoire",                    0,0,0 },
{ IDX_2C('c','k'),        "Iles Cook",                        0,0,0 },
{ IDX_2C('c','l'),        "Chili",                            0,0,0 },
{ IDX_2C('c','m'),        "Cameroun",                         0,0,0 },
{ IDX_2C('c','n'),        "Chine",                            0,0,0 },
{ IDX_2C('c','o'),        "Colombie",                         0,0,0 },
{ IDX_2C('c','r'),        "Costa Rica",                       0,0,0 },
{ IDX_2C('c','s'),        "Tchecoslovaquie (ancien)",         0,0,0 },
{ IDX_2C('c','u'),        "Cuba",                             0,0,0 },
{ IDX_2C('c','v'),        "Cap Vert",                         0,0,0 },
{ IDX_2C('c','x'),        "Ile Christmas",                    0,0,0 },
{ IDX_2C('c','y'),        "Chypre",                           0,0,0 },
{ IDX_2C('c','z'),        "Republique Tcheque",               0,0,0 },
{ IDX_2C('d','e'),        "Allemagne",                        0,0,0 },
{ IDX_2C('d','j'),        "Djibouti",                         0,0,0 },
{ IDX_2C('d','k'),        "Danemark",                            0,0,0 },
{ IDX_2C('d','m'),        "Dominique",                        0,0,0 },
{ IDX_2C('d','o'),        "Republique Dominicaine",           0,0,0 },
{ IDX_2C('d','z'),        "Algerie",                          0,0,0 },
{ IDX_2C('e','c'),        "Equateur",                         0,0,0 },
{ IDX_2C('e','e'),        "Estonie",                          0,0,0 },
{ IDX_2C('e','g'),        "Egypte",                           0,0,0 },
{ IDX_2C('e','h'),        "Sahara Occidental",                0,0,0 },
{ IDX_2C('e','r'),        "Erythree",                         0,0,0 },
{ IDX_2C('e','s'),        "Espagne",                          0,0,0 },
{ IDX_2C('e','t'),        "Ethiopie",                         0,0,0 },
{ IDX_2C('f','i'),        "Finlande",                         0,0,0 },
{ IDX_2C('f','j'),        "Fidji",                            0,0,0 },
{ IDX_2C('f','k'),        "Iles Falkland (Malouines)",        0,0,0 },
{ IDX_2C('f','m'),        "Micronesie",                       0,0,0 },
{ IDX_2C('f','o'),        "Iles Feroes",                      0,0,0 },
{ IDX_2C('f','r'),        "France",                           0,0,0 },
{ IDX_2C('f','x'),        "France Metropolitaine",            0,0,0 },
{ IDX_2C('g','a'),        "Gabon",                            0,0,0 },
{ IDX_2C('g','b'),        "Grande Bretagne (UK)",             0,0,0 },
{ IDX_2C('g','d'),        "Grenade",                          0,0,0 },
{ IDX_2C('g','e'),        "Georgie",                          0,0,0 },
{ IDX_2C('g','f'),        "Guyane Francaise",                 0,0,0 },
{ IDX_2C('g','g'),        "Guernesey",                        0,0,0 },
{ IDX_2C('g','h'),        "Ghana",                            0,0,0 },
{ IDX_2C('g','i'),        "Gibraltar",                        0,0,0 },
{ IDX_2C('g','l'),        "Groenland",                        0,0,0 },
{ IDX_2C('g','m'),        "Gambie",                           0,0,0 },
{ IDX_2C('g','n'),        "Guinee",                           0,0,0 },
{ IDX_2C('g','p'),        "Guadeloupe",                       0,0,0 },
{ IDX_2C('g','q'),        "Guinee Equatoriale",               0,0,0 },
{ IDX_2C('g','r'),        "Grece",                            0,0,0 },
{ IDX_2C('g','s'),        "Georgie et Iles Sandwich du Sud",  0,0,0 },
{ IDX_2C('g','t'),        "Guatemala",                        0,0,0 },
{ IDX_2C('g','u'),        "Guam",                             0,0,0 },
{ IDX_2C('g','w'),        "Guinee-Bissau",                    0,0,0 },
{ IDX_2C('g','y'),        "Guyane",                           0,0,0 },
{ IDX_2C('h','k'),        "Hong Kong",                        0,0,0 },
{ IDX_2C('h','m'),        "Iles Heard et McDonald",           0,0,0 },
{ IDX_2C('h','n'),        "Honduras",                         0,0,0 },
{ IDX_2C('h','r'),        "Croatie (Hrvatska)",               0,0,0 },
{ IDX_2C('h','t'),        "Haiti",                            0,0,0 },
{ IDX_2C('h','u'),        "Hongrie",                          0,0,0 },
{ IDX_2C('i','d'),        "Indonesie",                        0,0,0 },
{ IDX_2C('i','e'),        "Irlande",                          0,0,0 },
{ IDX_2C('i','l'),        "Israel",                           0,0,0 },
{ IDX_2C('i','m'),        "Ile de Man",                       0,0,0 },
{ IDX_2C('i','n'),        "Inde",                             0,0,0 },
{ IDX_2C('i','o'),        "Territ. Britannique Ocean Indien", 0,0,0 },
{ IDX_2C('i','q'),        "Iraq",                             0,0,0 },
{ IDX_2C('i','r'),        "Iran",                             0,0,0 },
{ IDX_2C('i','s'),        "Islande",                          0,0,0 },
{ IDX_2C('i','t'),        "Italie",                           0,0,0 },
{ IDX_2C('j','e'),        "Jersey",                           0,0,0 },
{ IDX_2C('j','m'),        "Jamaique",                         0,0,0 },
{ IDX_2C('j','o'),        "Jordanie",                         0,0,0 },
{ IDX_2C('j','p'),        "Japon",                            0,0,0 },
{ IDX_2C('k','e'),        "Kenya",                            0,0,0 },
{ IDX_2C('k','g'),        "Kirghizistan",                     0,0,0 },
{ IDX_2C('k','h'),        "Cambodge",                         0,0,0 },
{ IDX_2C('k','i'),        "Kiribati",                         0,0,0 },
{ IDX_2C('k','m'),        "Comores",                          0,0,0 },
{ IDX_2C('k','n'),        "Saint Christophe et Nevis",	      0,0,0 },
{ IDX_2C('k','p'),        "Coree (Nord)",                     0,0,0 },
{ IDX_2C('k','r'),        "Coree (Sud)",                      0,0,0 },
{ IDX_2C('k','w'),        "Koweit",                           0,0,0 },
{ IDX_2C('k','y'),        "Iles Caimans",                     0,0,0 },
{ IDX_2C('k','z'),        "Kazakhstan",                       0,0,0 },
{ IDX_2C('l','a'),        "Laos",                             0,0,0 },
{ IDX_2C('l','b'),        "Liban",                            0,0,0 },
{ IDX_2C('l','c'),        "Sainte Lucie",                     0,0,0 },
{ IDX_2C('l','i'),        "Liechtenstein",                    0,0,0 },
{ IDX_2C('l','k'),        "Sri Lanka",                        0,0,0 },
{ IDX_2C('l','r'),        "Liberia",                          0,0,0 },
{ IDX_2C('l','s'),        "Lesotho",                          0,0,0 },
{ IDX_2C('l','t'),        "Lituanie",                         0,0,0 },
{ IDX_2C('l','u'),        "Luxembourg",                       0,0,0 },
{ IDX_2C('l','v'),        "Lettonie (Latvija)",               0,0,0 },
{ IDX_2C('l','y'),        "Libye",                            0,0,0 },
{ IDX_2C('m','a'),        "Maroc",                            0,0,0 },
{ IDX_2C('m','c'),        "Monaco",                           0,0,0 },
{ IDX_2C('m','d'),        "Moldavie",                         0,0,0 },
{ IDX_2C('m','g'),        "Madagascar",                       0,0,0 },
{ IDX_2C('m','h'),        "Iles Marshall",                    0,0,0 },
{ IDX_2C('m','k'),        "Macedoine",                        0,0,0 },
{ IDX_2C('m','l'),        "Mali",                             0,0,0 },
{ IDX_2C('m','m'),        "Birmanie (Myanmar)",               0,0,0 },
{ IDX_2C('m','n'),        "Mongolie",                         0,0,0 },
{ IDX_2C('m','o'),        "Macao",                            0,0,0 },
{ IDX_2C('m','p'),        "Iles Mariannes Nord",              0,0,0 },
{ IDX_2C('m','q'),        "Martinique",                       0,0,0 },
{ IDX_2C('m','r'),        "Mauritanie",                       0,0,0 },
{ IDX_2C('m','s'),        "Montserrat",                       0,0,0 },
{ IDX_2C('m','t'),        "Malte",                            0,0,0 },
{ IDX_2C('m','u'),        "Ile Maurice",                      0,0,0 },
{ IDX_2C('m','v'),        "Maldives",                         0,0,0 },
{ IDX_2C('m','w'),        "Malawi",                           0,0,0 },
{ IDX_2C('m','x'),        "Mexique",                          0,0,0 },
{ IDX_2C('m','y'),        "Malaisie",                         0,0,0 },
{ IDX_2C('m','z'),        "Mozambique",                       0,0,0 },
{ IDX_2C('n','a'),        "Namibie",                          0,0,0 },
{ IDX_2C('n','c'),        "Nouvelle Caledonie",               0,0,0 },
{ IDX_2C('n','e'),        "Niger",                            0,0,0 },
{ IDX_2C('n','f'),        "Ile Norfolk",                      0,0,0 },
{ IDX_2C('n','g'),        "Nigeria",                          0,0,0 },
{ IDX_2C('n','i'),        "Nicaragua",                        0,0,0 },
{ IDX_2C('n','l'),        "Pays Bas",                         0,0,0 },
{ IDX_2C('n','o'),        "Norvege",                          0,0,0 },
{ IDX_2C('n','p'),        "Nepal",                            0,0,0 },
{ IDX_2C('n','r'),        "Nauru",                            0,0,0 },
{ IDX_2C('n','t'),        "Zone Neutre",                      0,0,0 },
{ IDX_2C('n','u'),        "Nioue",                            0,0,0 },
{ IDX_2C('n','z'),        "Nouvelle Zelande (Aotearoa)",      0,0,0 },
{ IDX_2C('o','m'),        "Oman",                             0,0,0 },
{ IDX_2C('p','a'),        "Panama",                           0,0,0 },
{ IDX_2C('p','e'),        "Perou",                            0,0,0 },
{ IDX_2C('p','f'),        "Polynesie Francaise",              0,0,0 },
{ IDX_2C('p','g'),        "Papouasie Nouvelle Guinee",        0,0,0 },
{ IDX_2C('p','h'),        "Philippines",                      0,0,0 },
{ IDX_2C('p','k'),        "Pakistan",                         0,0,0 },
{ IDX_2C('p','l'),        "Pologne",                          0,0,0 },
{ IDX_2C('p','m'),        "Saint Pierre et Miquelon",         0,0,0 },
{ IDX_2C('p','n'),        "Pitcairn",                         0,0,0 },
{ IDX_2C('p','r'),        "Porto Rico",                       0,0,0 },
{ IDX_2C('p','t'),        "Portugal",                         0,0,0 },
{ IDX_2C('p','w'),        "Palau",                            0,0,0 },
{ IDX_2C('p','y'),        "Paraguay",                         0,0,0 },
{ IDX_2C('q','a'),        "Qatar",                            0,0,0 },
{ IDX_2C('r','e'),        "Reunion",                          0,0,0 },
{ IDX_2C('r','o'),        "Roumanie",                         0,0,0 },
{ IDX_2C('r','u'),        "Russie",                           0,0,0 },
{ IDX_2C('r','w'),        "Rwanda",                           0,0,0 },
{ IDX_2C('s','a'),        "Arabie Saoudite",                  0,0,0 },
{ IDX_2C('s','b'),        "Iles Salomon",                     0,0,0 },
{ IDX_2C('s','c'),        "Seychelles",                       0,0,0 },
{ IDX_2C('s','d'),        "Soudan",                           0,0,0 },
{ IDX_2C('s','e'),        "Suede",                            0,0,0 },
{ IDX_2C('s','g'),        "Singapour",                        0,0,0 },
{ IDX_2C('s','h'),        "Sainte Helene",                    0,0,0 },
{ IDX_2C('s','i'),        "Slovenie",                         0,0,0 },
{ IDX_2C('s','j'),        "Iles Svalbard et Jan Mayen",       0,0,0 },
{ IDX_2C('s','k'),        "Slovaquie",                        0,0,0 },
{ IDX_2C('s','l'),        "Sierra Leone",                     0,0,0 },
{ IDX_2C('s','m'),        "Saint Marin",                      0,0,0 },
{ IDX_2C('s','n'),        "Senegal",                          0,0,0 },
{ IDX_2C('s','o'),        "Somalie",                          0,0,0 },
{ IDX_2C('s','r'),        "Suriname",                         0,0,0 },
{ IDX_2C('s','t'),        "Saint Thomas et Prince",           0,0,0 },
{ IDX_2C('s','u'),        "URSS (ancien)",                    0,0,0 },
{ IDX_2C('s','v'),        "Salvador",                         0,0,0 },
{ IDX_2C('s','y'),        "Syrie",                            0,0,0 },
{ IDX_2C('s','z'),        "Swaziland",                        0,0,0 },
{ IDX_2C('t','c'),        "Iles Turks et Caiques",            0,0,0 },
{ IDX_2C('t','d'),        "Tchad",                            0,0,0 },
{ IDX_2C('t','f'),        "Terres Australes Antarctiques Fr", 0,0,0 },
{ IDX_2C('t','g'),        "Togo",                             0,0,0 },
{ IDX_2C('t','h'),        "Thailande",                        0,0,0 },
{ IDX_2C('t','j'),        "Tadjikistan",                      0,0,0 },
{ IDX_2C('t','k'),        "Tokelau",                          0,0,0 },
{ IDX_2C('t','m'),        "Turkmenistan",                     0,0,0 },
{ IDX_2C('t','n'),        "Tunisie",                          0,0,0 },
{ IDX_2C('t','o'),        "Tonga",                            0,0,0 },
{ IDX_2C('t','p'),        "Timor Oriental",                   0,0,0 },
{ IDX_2C('t','r'),        "Turquie",                          0,0,0 },
{ IDX_2C('t','t'),        "Trinite et Tobago",                0,0,0 },
{ IDX_2C('t','v'),        "Tuvalu",                           0,0,0 },
{ IDX_2C('t','w'),        "Taiwan",                           0,0,0 },
{ IDX_2C('t','z'),        "Tanzanie",                         0,0,0 },
{ IDX_2C('u','a'),        "Ukraine",                          0,0,0 },
{ IDX_2C('u','g'),        "Ouganda",                          0,0,0 },
{ IDX_2C('u','k'),        "Royaume-Uni",                      0,0,0 },
/*      ('u','m'),        "I don't know !",                   ????? */
{ IDX_2C('u','m'),        "US Minor Outlying Islands",        0,0,0 },
{ IDX_2C('u','s'),        "Etats Unis",                       0,0,0 },
{ IDX_2C('u','y'),        "Uruguay",                          0,0,0 },
{ IDX_2C('u','z'),        "Ouzbekistan",                      0,0,0 },
{ IDX_2C('v','a'),        "Cite du Vatican",                  0,0,0 },
{ IDX_2C('v','c'),        "Saint Vincent et Grenadines",      0,0,0 },
{ IDX_2C('v','e'),        "Venezuela",                        0,0,0 },
{ IDX_2C('v','g'),        "Iles Vierges Britanniques",        0,0,0 },
{ IDX_2C('v','i'),        "Iles Vierges Americaines",	      0,0,0 },
{ IDX_2C('v','n'),        "Vietnam",                         0,0,0 },
{ IDX_2C('v','u'),        "Vanuatu",                          0,0,0 },
{ IDX_2C('w','f'),        "Iles Wallis et Futuna",            0,0,0 },
{ IDX_2C('w','s'),        "Samoa Occidentales",               0,0,0 },
{ IDX_2C('y','e'),        "Yemen",                            0,0,0 },
{ IDX_2C('y','t'),        "Mayotte",                          0,0,0 },
{ IDX_2C('y','u'),        "Yougoslavie",                      0,0,0 },
{ IDX_2C('z','a'),        "Afrique du Sud",                   0,0,0 },
{ IDX_2C('z','m'),        "Zambie",                           0,0,0 },
{ IDX_2C('z','r'),        "Zaire",                            0,0,0 },
{ IDX_2C('z','w'),        "Zimbabwe",                         0 ,0,0},
{ 0,                      NULL,                               0,0,0}};
